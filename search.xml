<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>H5C3新增属性</title>
      <link href="/%E5%89%8D%E7%AB%AF/H5C3%E6%96%B0%E5%A2%9E%E5%B1%9E%E6%80%A7/"/>
      <url>/%E5%89%8D%E7%AB%AF/H5C3%E6%96%B0%E5%A2%9E%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="H5C3新增属性"><a href="#H5C3新增属性" class="headerlink" title="H5C3新增属性"></a>H5C3新增属性</h1><p>本文主要介绍H5新增内容以及CSS3中的新特性</p><h2 id="H5新增内容"><a href="#H5新增内容" class="headerlink" title="H5新增内容"></a>H5新增内容</h2><p><strong>「1. 什么是HTML5」</strong></p><ul><li><p>定义：<strong>HTML5</strong>定义了<strong>HTML</strong>标准的最新版本，是对<strong>HTML</strong>的第五次重大修改，号称下一代的HTML。</p></li><li><p>两个概念：</p></li><li><ul><li>是一个新版本的<strong>HTML</strong>语言，定义了新的标签、特性和属性</li><li>拥有一个强大的技术集，这些技术集是指：<strong>HTML5、CSS3、JavaScript</strong>,这也是广义上的HTML5。</li></ul></li></ul><p><strong>「2. HTML5拓展了哪些内容」</strong></p><ul><li>语义化标签</li><li>本地存储</li><li>兼容特性</li><li>2D、3D</li><li>动画、过渡</li><li>CSS3特性</li><li>性能与集成</li></ul><h2 id="HTML5新增标签"><a href="#HTML5新增标签" class="headerlink" title="HTML5新增标签"></a>HTML5新增标签</h2><p><strong>「1. 什么是语义化」</strong></p><p>语义化是指用HTML写出符合<strong>内容的结构化</strong>（内容语义化），选择<strong>合适的标签</strong>（代码语义化），能够便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。</p><p><strong>「2. 新增了哪些语义化标签」</strong></p><ul><li><code>header</code>  —  头部标签</li><li><code>nav</code>     —  导航标签</li><li><code>article</code> —  内容标签</li><li><code>section</code> —  块级标签</li><li><code>aside</code>   —  侧边栏标签</li><li><code>footer</code>  —  尾部标签</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205291552900.png"></p><p><strong>「3. 新增多媒体音频标签」</strong></p><ul><li><p>多媒体标签有两个，分别是音频 <strong>audio</strong>和视频<strong>video</strong>。</p></li><li><p><code>audio 标签说明</code></p></li><li><ul><li>可以在不使用标签的情况下，也能够原生的支持音频格式文件的播放，</li><li>但是：播放的格式是<strong>有限</strong>的。</li></ul></li><li><p><code>audio 参数</code></p></li></ul><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>音频就绪后立刻播放</td></tr><tr><td>controls</td><td>controls</td><td>向用户展示音频控件</td></tr><tr><td>loop</td><td>loop</td><td>音频结束后重新循环播放</td></tr><tr><td>src</td><td>src</td><td>播放音频的url地址</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意：在 chrome 浏览器中已经禁用了 autoplay 属性 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;audio src=&quot;./media/snow.mp3&quot; controls autoplay&gt;&lt;/audio&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    因为不同浏览器支持不同的格式，所以我们采取的方案是这个音频准备多个文件 --&gt;</span>                             </span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;myAudio.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;myAudio.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser doesn&#x27;t support HTML5 audio. Here is</span><br><span class="line">     a <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;myAudio.mp4&quot;</span>&gt;</span>link to the audio<span class="tag">&lt;/<span class="name">a</span>&gt;</span> instead.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>video 参数</code></li></ul><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>自动播放</td></tr><tr><td>aontrols</td><td>controls</td><td>播放控件</td></tr><tr><td>width</td><td>px像素</td><td>宽度</td></tr><tr><td>height</td><td>px像素</td><td>高度</td></tr><tr><td>loop</td><td>loop</td><td>循环播放</td></tr><tr><td>preload</td><td>auto || none</td><td>是否预加载视频（如又autoplay忽略该属性）</td></tr><tr><td>src</td><td>url</td><td>视频url地址</td></tr><tr><td>poster</td><td>imgurl</td><td>加载等待图片地址</td></tr><tr><td>muted</td><td>muted</td><td>静音播放</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;video src=&quot;./media/video.mp4&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 谷歌浏览器禁用了自动播放功能，如果想自动播放，需要添加 muted 属性 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">autoplay</span> <span class="attr">muted</span> <span class="attr">loop</span> <span class="attr">poster</span>=<span class="string">&quot;./media/pig.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./media/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./media/video.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>多媒体标签总结</p></li><li><ul><li>音频标签和视频标签使用基本一致</li><li>多媒体标签在不同浏览器下情况不同，存在兼容性问题</li><li>谷歌浏览器把音频和视频标签的自动播放都<strong>禁止</strong>了</li><li>谷歌浏览器中视频添加<strong>muted</strong>属性就可以自己播放了</li><li>注意：重点记住使用方法及自动播放即可，其他属性在使用时查找对应的手册</li></ul></li></ul><p><strong>「4. 新增input标签」</strong></p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>type=“email”</td><td>限制用户输入必须为Email类型</td></tr><tr><td>type=“url”</td><td>限制用户输入必须为url类型</td></tr><tr><td>type=“date”</td><td>限制用户输入必须为日期类型</td></tr><tr><td>type=“time”</td><td>限制用户输入必须为时间类型</td></tr><tr><td>type=“month”</td><td>限制用户输入必须为月类型</td></tr><tr><td>type=“week”</td><td>限制用户输入必须为周类型</td></tr><tr><td>type=“number”</td><td>限制用户输入必须为数字类型</td></tr><tr><td>type=“tel”</td><td>手机号码</td></tr><tr><td>type=“search”</td><td>搜索框</td></tr><tr><td>type=“color”</td><td>生成一个颜色选择表单</td></tr></tbody></table><p><strong>「5. 新增表单属性」</strong></p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单为必填项</td></tr><tr><td>placeholder</td><td>提示文本</td><td>表单的提示信息</td></tr><tr><td>autofoucs</td><td>autofoucs</td><td>自动聚焦属性，页面加载完成时自动聚焦表单</td></tr><tr><td>autocomplete</td><td>off / on</td><td>显示之前提交过的值，须name属性和成功提交同时满足</td></tr><tr><td>multiple</td><td>multiple</td><td>可以多选文件提交</td></tr></tbody></table><h2 id="CSS3新增"><a href="#CSS3新增" class="headerlink" title="CSS3新增"></a>CSS3新增</h2><p><strong>「1. CSS3属性选择器」</strong></p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E {att}</td><td>选择具有att属性的E元素</td></tr><tr><td>E {att=“val”}</td><td>选择具有att属性且属性值等于val的E元素</td></tr><tr><td>E {att^=“val”}</td><td>匹配具有att属性，且值以val开头的E元素</td></tr><tr><td>E {att$=“val”}</td><td>匹配具有att属性，且值以val结尾的E元素</td></tr><tr><td>E {att*=“val”}</td><td>匹配具有att属性，且值中含有val的E元素</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">button</span><span class="selector-attr">[disabled]</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: default;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=search]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">span</span><span class="selector-attr">[class^=black]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: lightgreen;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">span</span><span class="selector-attr">[class$=black]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: lightsalmon;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">span</span><span class="selector-attr">[class*=black]</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: lightseagreen;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>「2. 结构伪类选择器」</strong></p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E:first-child</td><td>匹配父元素中第一个子元素E</td></tr><tr><td>E:last-child</td><td>匹配父元素中最后一个子元素E</td></tr><tr><td>E:nth-child(n)</td><td>匹配父元素中第n个子元素E</td></tr><tr><td>E:first-of-type</td><td>指定类型E的第一个</td></tr><tr><td>E:last-of-type</td><td>指定类型E的最后一个</td></tr><tr><td>E:nth-of-type(n)</td><td>指定类型E的第n个</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightseagreen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcoral;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>**nth-child(n)**参数n详解</p></li><li><ul><li>注意：本质上就是选中第几个子元素</li><li>n 可以是数字、关键字、公式</li><li>n 如果是数字，就是选中第几个</li><li>常见的关键字有 <code>even</code> 偶数、<code>odd</code> 奇数</li><li>常见的公式如下(如果 n 是公式，则从 0 开始计算)</li><li>但是第 0 个元素或者超出了元素的个数会被忽略</li></ul></li></ul><table><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n+1</td><td>奇数</td></tr><tr><td>5n</td><td>5 10 15…</td></tr><tr><td>n+5</td><td>从第五个开始到最后（包含第五个）</td></tr><tr><td>-n+5</td><td>前五个（包含第五）</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="comment">/* 偶数 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(even) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 奇数 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: blueviolet;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*n 是公式，从 0 开始计算 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(n) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightcoral;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 偶数 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 奇数 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n + <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightsalmon;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 选择第 0 5 10 15, 应该怎么选 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>n) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orangered;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* n + 5 就是从第5个开始往后选择 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(n + <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: peru;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* -n + 5 前五个 */</span></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(-n + <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: tan;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>nth-child与nth-of-type区别</code></p></li><li><ul><li><code>nth-child</code> 选择父元素里面的第几个子元素，不管是第几个类型</li><li><code>nth-of-type</code> 选择指定类型的元素</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightpink;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightseagreen;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>「3. 伪元素选择器」</strong></p></li><li><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>::before</td><td>在元素内部的前面插入内容</td></tr><tr><td>::after</td><td>在元素内部的后面插入内容</td></tr></tbody></table></li><li><ul><li><p>伪元素选择器注意事项</p></li><li><ul><li><code>before</code> 和 <code>after</code> 必须有 <code>content</code> 属性</li><li><code>before</code> 在内容前面，after 在内容后面</li><li><code>before</code> 和 <code>after</code> 创建的是一个元素，但是属于行内元素</li><li>创建出来的元素在 <code>Dom</code> 中查找不到，所以称为伪元素</li><li>伪元素和标签选择器一样，权重为 1<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid lightcoral;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">div</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">    <span class="selector-tag">div</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">div</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;德&#x27;</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">div</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;道&#x27;</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: mediumaquamarine;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h5 id="伪元素字体图标"><a href="#伪元素字体图标" class="headerlink" title="伪元素字体图标"></a>伪元素字体图标</h5></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: ‘icomoon’;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">‘fonts/icomoon.eot?7kkyc2’</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">‘fonts/icomoon.eot?7kkyc2#iefix’</span>) <span class="built_in">format</span>(‘embedded-opentype’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.ttf?7kkyc2’</span>) <span class="built_in">format</span>(‘truetype’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.woff?7kkyc2’</span>) <span class="built_in">format</span>(‘woff’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.svg?7kkyc2#icomoon’</span>) <span class="built_in">format</span>(‘svg’);</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> solid lightseagreen;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;\ea50&#x27;</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS高级技巧</title>
      <link href="/%E5%89%8D%E7%AB%AF/CSS%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/"/>
      <url>/%E5%89%8D%E7%AB%AF/CSS%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS高级技巧"><a href="#CSS高级技巧" class="headerlink" title="CSS高级技巧"></a>CSS高级技巧</h1><h2 id="元素的显示与隐藏"><a href="#元素的显示与隐藏" class="headerlink" title="元素的显示与隐藏"></a>元素的显示与隐藏</h2><p>让一个元素在页面中隐藏或显示出来</p><p>一共有三个属性</p><table><thead><tr><th>属性</th><th>属性值</th></tr></thead><tbody><tr><td>display</td><td>none | display</td></tr><tr><td>visibility</td><td>hidden | visible</td></tr><tr><td>overflow</td><td>visible | hidden | scroll | auto</td></tr></tbody></table><p>display属性隐藏后会脱标，不占有原来位置</p><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205282000945.png"></p><p>visibility属性隐藏后不会脱标，继续占有原来位置</p><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205282001733.png"></p><p>overflow属性针对溢出，visible | hidden | scroll | auto</p><table><thead><tr><th>overflow属性值</th><th>描述</th></tr></thead><tbody><tr><td>visible</td><td>不剪切内容不添加滚动条</td></tr><tr><td>hidden</td><td>隐藏超出对象尺寸的内容</td></tr><tr><td>scroll</td><td>总分是显示滚动条</td></tr><tr><td>auto</td><td>超出内容自动显示滚动条，不超出不显示</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205282002302.png"></p><h2 id="精灵图技术"><a href="#精灵图技术" class="headerlink" title="精灵图技术"></a>精灵图技术</h2><ul><li>图所示为网页的请求原理图，当用户访问一个网站时，需要向服务器发送请求，网页上的每张图像都要经过一次请求才能展现给用户。</li><li>然而，一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接受和发送请求，这将大大降低页面的加载速度。</li></ul><p>为了有效地减少服务器接受和发送请求的次数，提高页面的加载速度。CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图），然而，各个网页元素通常只需要精灵图中不同位置的某个小图，要想精确定位到精灵图中的某个小图。这样，当用户访问该页面时，只需向服务发送一次请求，网页中的背景图像即可全部展示出来。</p><p>需要使用CSS的:</p><ul><li>background-image、</li><li>background-repeat</li><li>background-position属性进行背景定位，</li><li>其中最关键的是使用<code>background-position</code> 属性精确地定位。</li></ul><h4 id="精灵技术使用的核心总结"><a href="#精灵技术使用的核心总结" class="headerlink" title="精灵技术使用的核心总结"></a>精灵技术使用的核心总结</h4><p>首先我们知道，css精灵技术主要针对于背景图片，插入的图片img 是不需要这个技术的。</p><ol><li>精确测量，每个小背景图片的大小和 位置。</li><li>给盒子指定小背景图片时， 背景定位基本都是 负值。</li></ol><h2 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h2><p>网页中的一些小图标通常用字体图标iconfont来显示，字体图标本质上是字体，现实的是图标。</p><p>字体图标下载网站</p><ul><li>icomoon字库 <a href="https://icomoon.io/">https://icomoon.io</a> </li><li>阿里iconfont字库 <a href="https://www.iconfont.cn/">https://www.iconfont.cn</a></li></ul><ol><li>在字体图标网站选中图标下载后，需要将其引入到，将下载包里的fonts文件夹放入页面根目录下</li><li>在CSS样式中全局声明字体，把这些字体文件通过CSS引入到我们页面中，一定要注意字体文件路径问题</li></ol><p>声明代码如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: ‘icomoon’;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">‘fonts/icomoon.eot?7kkyc2’</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">‘fonts/icomoon.eot?7kkyc2#iefix’</span>) <span class="built_in">format</span>(‘embedded-opentype’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.ttf?7kkyc2’</span>) <span class="built_in">format</span>(‘truetype’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.woff?7kkyc2’</span>) <span class="built_in">format</span>(‘woff’),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">‘fonts/icomoon.svg?7kkyc2#icomoon’</span>) <span class="built_in">format</span>(‘svg’);</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spam</span>&gt;</span> <span class="tag">&lt;/<span class="name">spam</span>&gt;</span>  /复制图标网站上的源码</span><br></pre></td></tr></table></figure><p>字体图标的追加：把压缩包中slection.json重新上传，然后选中自己想要更新的图标，重新下载压缩包，并途欢原来的文件即可。</p><h2 id="CSS三角"><a href="#CSS三角" class="headerlink" title="CSS三角"></a>CSS三角</h2><ol><li>我们用css 边框可以模拟三角效果</li><li>宽度高度为0</li><li>我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li><li>为了照顾兼容性 低版本的浏览器，加上 font-size: 0;  line-height: 0;</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">0</span>；</span><br><span class="line">    font-size: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border-top</span>: <span class="number">10px</span> solid red;</span><br><span class="line"></span><br><span class="line">   <span class="attribute">border-right</span>: <span class="number">10px</span> solid green;</span><br><span class="line"></span><br><span class="line">   <span class="attribute">border-bottom</span>: <span class="number">10px</span> solid blue;</span><br><span class="line"></span><br><span class="line">   <span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="number">#000</span>; </span><br><span class="line"></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205281959548.png"></p><h2 id="CSS用户页面样式"><a href="#CSS用户页面样式" class="headerlink" title="CSS用户页面样式"></a>CSS用户页面样式</h2><h3 id="鼠标样式cursor"><a href="#鼠标样式cursor" class="headerlink" title="鼠标样式cursor"></a>鼠标样式cursor</h3><p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>curous</td><td>default</td><td>小白(默认)</td></tr><tr><td></td><td>pointer</td><td>小手</td></tr><tr><td></td><td>move</td><td>移动</td></tr><tr><td></td><td>text</td><td>文本</td></tr><tr><td></td><td>not-allowed</td><td>禁止</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span> style=&quot;<span class="attribute">cursor</span><span class="selector-pseudo">:default</span>&quot;&gt;我是小白&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span> style=&quot;<span class="attribute">cursor</span>:pointer<span class="string">&quot;&gt;我是小手&lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;li style=&quot;</span>cursor:move<span class="string">&quot;&gt;我是移动&lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;li style=&quot;</span>cursor:text<span class="string">&quot;&gt;我是文本&lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;li style=&quot;</span>cursor:not-allowed<span class="string">&quot;&gt;我是文本&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br></pre></td></tr></table></figure><h3 id="轮廓线outline"><a href="#轮廓线outline" class="headerlink" title="轮廓线outline"></a>轮廓线outline</h3><p>是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">outline</span> : outline-color || outline-style || outline-width </span><br></pre></td></tr></table></figure><p>但是我们都不关心可以设置多少，我们平时都是去掉的。<br>最直接的写法是 ： outline: 0;  或者  outline: none;</p><h3 id="防拖拽文本域resize"><a href="#防拖拽文本域resize" class="headerlink" title="防拖拽文本域resize"></a>防拖拽文本域resize</h3><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205282012600.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/*css行内式写法*/</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">style</span>=<span class="string">&quot;resize: none;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="vertical-align属性应用"><a href="#vertical-align属性应用" class="headerlink" title="vertical-align属性应用"></a>vertical-align属性应用</h3><p>vertical-align 垂直对齐，它只针对于<strong>「行内元素」</strong>或者<strong>「行内块元素」</strong></p><p>可以用来设置<strong>图片表单文字对齐</strong>和<strong>去除图片底侧空白空袭</strong></p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/202205282016270.jpg"></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置或检索对象内容的垂直对其方式。</span><br><span class="line"><span class="attribute">vertical-align</span> : baseline |top |middle |bottom </span><br></pre></td></tr></table></figure><p>注意：</p><p>vertical-align 不影响块级元素中的内容对齐，它只针对于<strong>「行内元素」</strong>或者<strong>「行内块元素」</strong>，</p><p>特别是行内块元素， 通常用来控制图片/表单与文字的对齐。</p><ul><li>有宽度的块级元素居中对齐，是margin: 0 auto;</li><li>让文字居中对齐，是 text-align: center;</li></ul><h3 id="溢出文字省略号显示"><a href="#溢出文字省略号显示" class="headerlink" title="溢出文字省略号显示"></a>溢出文字省略号显示</h3><p>三个步骤,</p><ol><li>先强制一行内显示文本</li><li>超出的部分隐藏</li><li>文字用省略号替代超出的部分</li></ol><p>white-space属性设置或检索对象内文本显示方式。通常我们使用于强制一行显示内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">white-space</span>:normal ；默认处理方式</span><br><span class="line"></span><br><span class="line">white-space:nowrap ； 强制在同一行内显示所有文本，直到文本结束或者遭遇br标签对象才换行。</span><br></pre></td></tr></table></figure><p>text-overflow属性设置或检索是否使用一个省略标记（…）标示对象内文本的溢出</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-overflow</span> : clip ；不显示省略标记（...），而是简单的裁切 </span><br><span class="line"></span><br><span class="line">text-overflow：ellipsis ； 当对象内文本溢出时显示省略标记（...）</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1. 先强制一行内显示文本*/</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="comment">/*2. 超出的部分隐藏*/</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="comment">/*3. 文字用省略号替代超出的部分*/</span></span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><h2 id="常见布局技巧"><a href="#常见布局技巧" class="headerlink" title="常见布局技巧"></a>常见布局技巧</h2><ol><li>margin负值的运用</li><li>文字环绕浮动元素</li><li>行内块元素巧妙运用</li><li>CSS三角强化</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS定位</title>
      <link href="/%E5%89%8D%E7%AB%AF/CSS%E5%AE%9A%E4%BD%8D/"/>
      <url>/%E5%89%8D%E7%AB%AF/CSS%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><h2 id="定位基础"><a href="#定位基础" class="headerlink" title="定位基础"></a>定位基础</h2><p>定位就是将盒子定在某一位置，</p><p>定位=定位模式+位偏移</p><p>定位模式和位偏移都属于属性</p><p>定位模式用于指定一个元素在文档中的定位方式，边偏移就是决定该元素的最终位置。</p><p>position属性用来设置定位模式，属性值分为四个</p><table><thead><tr><th>属性</th><th>属性值</th><th>语义</th></tr></thead><tbody><tr><td>position</td><td>static</td><td>静态定位</td></tr><tr><td></td><td>relative</td><td>相对定位</td></tr><tr><td></td><td>absolute</td><td>绝对定位</td></tr><tr><td></td><td>fixed</td><td>固定定位</td></tr><tr><td></td><td>sticky</td><td>粘性定位</td></tr></tbody></table><p>边偏移有四个属性 top left right bottom</p><table><thead><tr><th>属性</th><th>属性值示例</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>top: 50px;</td><td>顶端偏移量，定义元素相对于其父元素上边线的距离</td></tr><tr><td>bottom</td><td>bottom: 50px;</td><td>下端偏移量，定义元素相对于其父元素下边线的距离</td></tr><tr><td>left</td><td>left: 50px;</td><td>左端偏移量，定义元素相对于其父元素左边线的距离</td></tr><tr><td>right</td><td>right: 50px</td><td>右端偏移量，定义元素相对于其父元素右边线的距离</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>；<span class="number">0px</span>；</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="static定位"><a href="#static定位" class="headerlink" title="static定位"></a>static定位</h3><p>static定位是元素的默认定位方式，无定位的意思，按照标准流的位置，平时很少用到这种</p><p>relative相对定位，</p><p>它有两个特点：</p><ol><li>元素在移动位置时，相对于它原来的位置来移动的，移动位置时以自身位置为参考点</li><li>不会脱标，继续保留原来标准流的位置，后面盒子仍以标准流对待他</li><li>子绝父相</li></ol><h3 id="absolute定位"><a href="#absolute定位" class="headerlink" title="absolute定位"></a>absolute定位</h3><p>它有三个特点：</p><ol><li>移动位置时相对它祖先元素来移动，如果没有祖先元素或者祖先元素没有添加定位，则以浏览器为准定位</li><li>如果祖先元素有定位（相对绝对固定），则以最近一级有定位的祖先元素为参考点</li><li>会脱标，不占有原来的位置</li><li>子绝父相</li></ol><h3 id="fixed定位"><a href="#fixed定位" class="headerlink" title="fixed定位"></a>fixed定位</h3><p>fixed固定定位，是固定在浏览器可视区的位置，浏览器滚动时元素位置不改变</p><p>特点：</p><ol><li>以浏览器可视窗口为参考点移动元素，与父元素无关，不随滚动条滚动</li><li>也会脱标，不占有原来的位置，可以看作时特殊的绝对定位</li></ol><h3 id="sticky定位"><a href="#sticky定位" class="headerlink" title="sticky定位"></a>sticky定位</h3><p>sticky粘性定位，被认为是相对定位和固定定位的混合</p><p>特点：</p><ol><li>以浏览器可视窗口为参照物（固定特点)</li><li>不会脱标，占有原来的位置（相对特点）</li><li>必须添加边偏移其中一个元素才有效</li><li>跟页面滚动搭配使用，兼容性差</li></ol><h3 id="子绝父相："><a href="#子绝父相：" class="headerlink" title="子绝父相："></a>子绝父相：</h3><p>子元素用绝对定位，父元素用相对定位。可以让子元素固定在父元素里面显示，父元素占有位置</p><h3 id="CSS小算法："><a href="#CSS小算法：" class="headerlink" title="CSS小算法："></a>CSS小算法：</h3><p>固定定位固定在版心右侧位置，多走版心宽度一半位置就可让固定定位盒子贴着版心右侧对齐了</p><ol><li>让固定定位的盒子left:50%，走到版心一半的位置</li><li>让固定定位的盒子margin:left;版心宽度一半的距离</li></ol><h2 id="定位的一些拓展"><a href="#定位的一些拓展" class="headerlink" title="定位的一些拓展"></a>定位的一些拓展</h2><h3 id="定位叠放次序z-index"><a href="#定位叠放次序z-index" class="headerlink" title="定位叠放次序z-index"></a>定位叠放次序z-index</h3><p>多个盒子使用定位时，可能会出现重叠，可通过z-index属性来控制盒子前后次序（z轴）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>属性值可以是正整数，负整数，或0。默认是auto，数值越大越靠上</li><li>若属性值相同按书写顺序，后来居上</li><li>数字不加单位</li><li>只有定位的盒子才有z-index 属性</li></ol><h3 id="定位盒子垂直居中"><a href="#定位盒子垂直居中" class="headerlink" title="定位盒子垂直居中"></a>定位盒子垂直居中</h3><p>加了定位的盒子不能通过margin: 0 auto;水平居中，需要通过下面算法实现水平和垂直居中</p><ol><li>left: 50%；让盒子左侧移动到父级元素的水平中心位置</li><li>margin-left: 100px; 让盒子向左移动自身宽度的一半</li><li>垂直居中同理</li></ol><h3 id="定位特殊性"><a href="#定位特殊性" class="headerlink" title="定位特殊性"></a>定位特殊性</h3><h4 id="绝对定位和固定定位和浮动类似"><a href="#绝对定位和固定定位和浮动类似" class="headerlink" title="绝对定位和固定定位和浮动类似"></a>绝对定位和固定定位和浮动类似</h4><ol><li>行内元素添加绝对或固定后，可以直接设置宽度和高度</li><li>块级元素添加后，如不设置宽度和高度，默认为内容大小</li></ol><h4 id="脱标盒子不会引发外边距塌陷"><a href="#脱标盒子不会引发外边距塌陷" class="headerlink" title="脱标盒子不会引发外边距塌陷"></a>脱标盒子不会引发外边距塌陷</h4><p>浮动元素，绝对定位，固定定位都不会触发外边距合并问题</p><h4 id="绝对固定定位会完全压住盒子"><a href="#绝对固定定位会完全压住盒子" class="headerlink" title="绝对固定定位会完全压住盒子"></a>绝对固定定位会完全压住盒子</h4><ol><li>浮动元素会压住标准流和盒子，但不会压住标准流盒子里面的文字图片</li><li>绝对和固定会压住盒子所有内容</li><li>浮动之所以不会压住文字，是因为浮动最初目的就是做文字环绕效果</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>括号法解读英语句子</title>
      <link href="/%E8%8B%B1%E8%AF%AD/%E6%8B%AC%E5%8F%B7%E6%B3%95%E8%A7%A3%E8%AF%BB%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/"/>
      <url>/%E8%8B%B1%E8%AF%AD/%E6%8B%AC%E5%8F%B7%E6%B3%95%E8%A7%A3%E8%AF%BB%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="括号法解读英语句子"><a href="#括号法解读英语句子" class="headerlink" title="括号法解读英语句子"></a>括号法解读英语句子</h1><h2 id="目标："><a href="#目标：" class="headerlink" title="目标："></a><strong>目标：</strong></h2><ol><li>理解能力：读懂句子</li><li>表达能力：写出句子</li></ol><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识:"></a><strong>基本知识:</strong></h2><ul><li><p>主语：句子描述的对象</p></li><li><p>谓语：用来描述主语</p></li><li><p>谓语动词：谓语部分中的核心的动词；<strong>一个单句有且只有一个谓语动词！</strong></p></li></ul><p>eg:</p><p>李辉教英语</p><p>李辉帅。LiHui is handsome.</p><p>句子=主干结构+修饰结构</p><p><strong>主干结构</strong>：</p><ul><li><p>主谓    I come.</p></li><li><p>主谓宾    I love you.</p></li><li><p>主谓宾宾    I give you my heart.</p></li><li><p>主谓宾补    You make me happy.</p></li><li><p>主系表    You are my everything.</p></li></ul><p><strong>修饰结构：</strong></p><p><strong>短：</strong>                            </p><ul><li><p>形容词    This is a big box.    Let me tell you something interesting.（不定代词）</p></li><li><p>副词    I really love you.</p></li></ul><p><strong>长：</strong>“四朵金花”导致英语语序和中文并不一样！</p><ul><li><p>介词短语    I love you (in my heart).    （介词….名词）</p></li><li><p>从句    LiHui is a teacher (who teaches English).    （引导词+陈述语序）</p></li><li><p>非谓语动词    Lihui is a teacher (teaching English).    (to do)/(doing)/(done)</p></li><li><p>时间状语    (Last week),I went (to the park).    表时间，无介词。</p></li></ul><p>eg：</p><p>Lihui is a teacher (teaching English) (in Beijing) (which is the capital) (of China).</p><p>(After chatting) (with LiHui) (on this matter) (in this room) (for a long time) (from 2:00) (to 4:00) (in the afternoon), I returned (to my office).</p><h2 id="断句！"><a href="#断句！" class="headerlink" title="断句！"></a>断句！</h2><ol><li><p>主干部分直接翻</p></li><li><p>遇到金花画括号</p></li><li><p>提着问题往下顺（每个括号里第一个单词，都叫挂钩单词，可以利用挂钩自问自答，将句子“顺下来”）</p></li><li><p>调字调序写中文（如果需要做翻译题，则需要调整语序；如果想学听说读写，则不必调整语序——要训练自己习惯英语思维顺序）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语语法概念系统</title>
      <link href="/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E6%A6%82%E5%BF%B5%E7%B3%BB%E7%BB%9F/"/>
      <url>/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E6%A6%82%E5%BF%B5%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="英语语法概念系统"><a href="#英语语法概念系统" class="headerlink" title="英语语法概念系统"></a>英语语法概念系统</h1><h2 id="语法报菜名"><a href="#语法报菜名" class="headerlink" title="语法报菜名"></a>语法报菜名</h2><p>​      英语语法研究<strong>词法</strong>和<strong>句法</strong>。其中词法研究单词的词义和词性。词性分为<strong>实词</strong>和虚词，实词包括名形动副数，虚词包括冠代介感连。其中，实词中最难的是<strong>动词</strong>。动词研究<strong>谓语动词</strong>（心脏）和<strong>非谓语动词</strong>（脉搏）。谓语动词研究<strong>时态</strong>，<strong>语态</strong>，<strong>语气</strong>和<strong>主谓一致</strong>。而非谓语动词研究三种形式——分别是<strong>动词不定式</strong>to do，<strong>动名词</strong>doing和<strong>分词</strong>，其中分词包括<strong>现在分词</strong>doing（主动）和<strong>过去分词</strong>done（被动）。</p><p>​      以词构句，就形成语法。其中最简单的句子叫<strong>简单句</strong>（一句一主谓），简单句有五种基本结构：主谓，主谓宾，主谓宾宾，主谓宾补，主系表。把简单句变得更加简单，就是省略主语和谓语的一些成分，构成<strong>省略句</strong>。把简单句主语和谓语适当颠倒一下，就构成<strong>倒装句</strong>，倒装句分为完全倒装和不完全倒装句。</p><p>​      简单句还能变得更复杂，一种是并列连词and，or，but，so构成<strong>并列句</strong>；一种是加上从属连词构成<strong>主从复合句</strong>。主从复合句包含三种情况，分别是<strong>名词性从句</strong>，<strong>定语从句</strong>和<strong>状语从句</strong>。其中名词性从句包括<strong>主语</strong>从句，<strong>宾语</strong>从句，<strong>表语</strong>从句，<strong>同位语</strong>从句。定语从句包括<strong>限制性</strong>定语从句和<strong>非限制性</strong>定语从句，也能分成<strong>关系代词</strong>和<strong>关系副词</strong>引导的定语从句。状语从句一般有九种，分别是<strong>时间</strong>，<strong>地点</strong>，<strong>原因</strong>，<strong>结果</strong>，<strong>方式</strong>，<strong>目的</strong>，<strong>条件</strong>，<strong>让步</strong>，<strong>比较</strong>，再加上独立主格结构和强调句型就是全部英语语法。</p><p>​      一个单句有且只有一个谓语动词，当需要使用第二个动词时要么用非谓语动词，要么用从句。</p><h2 id="简要解释"><a href="#简要解释" class="headerlink" title="简要解释"></a>简要解释</h2><h3 id="实词虚词"><a href="#实词虚词" class="headerlink" title="实词虚词"></a>实词虚词</h3><p><strong>实词：大喊一声，你就懂了</strong>（有实际意义）</p><ul><li><p>名词：李辉！</p></li><li><p>动词：跑！</p></li><li><p>形容词：帅！</p></li><li><p>副词：快点！</p></li><li><p>数词：100！</p></li></ul><p><strong>虚词：大喊一声，你就懵了</strong>（无实际意义）</p><ul><li>冠词：a! an! the!</li><li>代词：I! You!</li><li>感叹词：Ah! Oh!</li><li>连词：If! becouse!</li></ul><h3 id="句子结构"><a href="#句子结构" class="headerlink" title="句子结构"></a>句子结构</h3><p><strong>句子=主语部分+谓语部分</strong></p><ul><li><p>主语：句子的主角/被描述的对象（名词）</p></li><li><p>谓语：用来说主语（动词）</p></li></ul><p><strong>eg:</strong></p><p>LiHui teaches English.</p><p>China is an open country.</p><p>(You) Come here.</p><p>李辉帅。    LiHui is handsome.</p><p>一个句子中用到多个动词时，保留一个作<strong>谓语</strong>，其他统统写成<strong>非谓语动词(主动doing/被动done/要做to do)</strong></p><p>eg: </p><p>走在回家的路上，我看到一个老头骑着自行车看报纸计划去买菜被车撞了坐在地上哭</p><p>Working home,I saw an old man ,riding a bike, reading </p><h3 id="省略句"><a href="#省略句" class="headerlink" title="省略句"></a><strong>省略句</strong></h3><ol><li>因为习惯而省略</li><li>因为重复而省略</li><li>状语从句中的省略</li></ol><p>因为习惯而省略</p><p>​        (It is a) Good morning.</p><p>​        (You are) Welcome.</p><p>​        (I )Thank you.</p><p>因为重复而省略</p><p>​        and 后，如果跟前面相同，可省略：</p><p>​        I go to school and I work hard.</p><p>​        情态动词或to 后面，如果跟前面相同，可省略：</p><p>​        -Why don’t you help him? He is your friend.</p><p>​        -Well,I know I should, but I don’t want to.</p><p>状语从句中的省略</p><ul><li><p>陈述语序：主语在前+谓语在后</p></li><li><p>完全倒装语序：谓语在前+主语在后</p></li><li><p>不完全倒装：助/系/情+主语+谓语剩余部分</p></li></ul><p>eg:</p><p>Here comes the bus.</p><p>Never should you talk with your father like that.</p><h3 id="并列和主从"><a href="#并列和主从" class="headerlink" title="并列和主从"></a>并列和主从</h3><ul><li>并列复合句：双胞胎（兄弟俩关系时好时坏，但不存在谁属于谁的关系）</li><li>主从复合句：老大+小弟（小弟属于老大，小弟是老大的一部分，小弟是老大的左膀右臂）</li></ul><p>eg:</p><p>I love you and you love me.</p><p>I love you but you don’t love me.</p><p>I know (that you love me) .（宾语从句）</p><p>I fell in love with you.</p><p>I fell in love with you( when you said you love )</p><p>I fell in love with you( where you saved my life )</p><p>I fell in love with you( because you are handsome. )</p><h3 id="独立主格"><a href="#独立主格" class="headerlink" title="独立主格"></a>独立主格</h3><p>普通句子=名词+谓语动词</p><p>独立主格=名词+非谓语动词/形容词/副词/介词</p><p>eg:</p><p>The blue sky waiting for the smoky rain, I am waitng for you.</p><p>天青色等雨，而我在等你。</p><h3 id="强调句型"><a href="#强调句型" class="headerlink" title="强调句型"></a>强调句型</h3><p>It is/was + 被强调部分+that/who+句子剩余部分</p><p>正是…….（稍微停顿一下）…..</p><p>LiHui teaches English.</p><p>It is Lihui that Teaches English.</p><p>It is English that LiHui teaches.</p><p>LiHui does teaches English.</p><p>​        </p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS选择器</title>
      <link href="/%E5%89%8D%E7%AB%AF/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/%E5%89%8D%E7%AB%AF/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1CSS选择器简介"><a href="#1CSS选择器简介" class="headerlink" title="1CSS选择器简介"></a>1CSS选择器简介</h1><h2 id="1-1CSS选择器的作用"><a href="#1-1CSS选择器的作用" class="headerlink" title="1.1CSS选择器的作用"></a>1.1CSS选择器的作用</h2><p>选择器（选择符）就是根据不同需求把不同的标签选出来，这就是选择器的作用。简单来说，就是选择标签用的。 CSS做了两件事： </p><ol><li>找到标签（选对人）</li><li>设置这些标签的样式（做对事）</li></ol><h2 id="1-2选择器分类"><a href="#1-2选择器分类" class="headerlink" title="1.2选择器分类"></a>1.2选择器分类</h2><p>在CSS中，可以根据选择器类型把选择器分为基础选择器和复合选择器。</p><ul><li>基础选择器是由单个选择器组成的 </li><li>基础选择器又包括：<strong>标签选择器、类选择器、id选择器和通配符选择器</strong></li></ul><p>复合选择器是建立在基础选择器之上，对基础选择器进行组合形成的。</p><ul><li>复合选择器可以更精准，更高效的选择目标元素（标签）</li><li>复合选择器是有两个或多个基础选择器，通过不同的方式组合而成的</li><li>常用的复合选择器包括：<strong>后代选择器，子选择器，并集选择器，伪类选择器等</strong></li></ul><h1 id="2基础选择器"><a href="#2基础选择器" class="headerlink" title="2基础选择器"></a>2基础选择器</h1><h2 id="2-1标签选择器"><a href="#2-1标签选择器" class="headerlink" title="2.1标签选择器"></a>2.1标签选择器</h2><p>标签选择器（元素选择器）是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。 </p><p>作用: 标签选择器可以把某一类标签全部选择出来，比如所有的div标签和所有的span标签。 </p><p>优点: 能快速为页面中同类型的标签统一设置样式。 </p><p>缺点: 不能设计差异化样式，只能选择全部的当前标签。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>;</span><br><span class="line">        属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">        属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">      &#125; </span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h2 id="2-2类选择器"><a href="#2-2类选择器" class="headerlink" title="2.2类选择器"></a>2.2类选择器</h2><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。</p><p>类选择器在HTML中以class属性表示，在CSS中，类选择器以一个点“ <strong>.</strong> ”号显示。 </p><p><strong>注意</strong> ①类选择器使用“ . ”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。 </p><p>②可以理解为给这个标签起了一个名字，来表示。 </p><p>③长名称或词组可以使用中横线来为选择器命名。 </p><p>④不要使用纯数字、中文等命名，尽量使用英文字母来表示。 </p><p>⑤命名要有意义，尽量使别人一眼就知道这个类名的目的。 </p><p>⑥命名规范：见附件(Web前端开发规范手册. doc)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.类名<span class="number">1</span>  &#123;   </span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>; </span><br><span class="line">    属性<span class="number">2</span>: 属性值<span class="number">2</span>; </span><br><span class="line">    属性<span class="number">3</span>: 属性值<span class="number">3</span>;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;类名1 类名2&quot;</span>&gt;</span> 样例 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>各个类名中间用空格隔开</li><li>简单理解：就是给某个标签添加了多个类，或者这个标签有多个名字</li><li>这个标签就可以分别具有这些类名的样式</li><li>从而节省css代码，统一修改也非常方便</li><li>多个类名选择器在后期布局比较复杂的情况下，还是较多使用的</li></ul><h2 id="2-3id选择器"><a href="#2-3id选择器" class="headerlink" title="2.3id选择器"></a>2.3id选择器</h2><p>id选择器可以为标有特定id的HTML元素指定特定的样式。</p><p>HTML元素以id属性来设置id选择器，CSS中id选择器以“ <strong>#</strong> ”来定义。</p><p><strong>注意</strong>：id属性只能在每个HTML文档中出现一次</p><p><strong>口诀</strong>：样式#定义，结构id调用，只能调用一次，别人切勿使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>; </span><br><span class="line">        属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">        属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;id名&quot;</span>&gt;</span>样例<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>id选择器和类选择器的区别</strong> </p><p>①类选择器(class)好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。 </p><p>②id选择器好比人的身份证号码β、全中国是唯一的,不得重复。 </p><p>③id选择器和类选择器最大的不同在于使用次数上。 </p><p>④类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</p><h2 id="2-4通配符选择器"><a href="#2-4通配符选择器" class="headerlink" title="2.4通配符选择器"></a>2.4通配符选择器</h2><p>在CSS中，通配符选择器使用“ ***** ”定义，它表示选取页面中所有元素(标签)。</p><ul><li>通配符选择器不需要调用，自动就给所有的元素使用样式</li><li>特殊情况才使用，后面讲解使用</li></ul><p><strong>注意：</strong>会匹配页面所有的元素，降低页面响应速度，不建议随便使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>; </span><br><span class="line">    属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">    属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如下面代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;                    <span class="comment">/* 定义外边距*/</span></span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0</span>;                   <span class="comment">/* 定义内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5基础选择器总结"><a href="#2-5基础选择器总结" class="headerlink" title="2.5基础选择器总结"></a>2.5基础选择器总结</h2><table><thead><tr><th>标签选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td><td>p {color: red}</td></tr><tr><td>类选择器</td><td>可以选出一个或多个标签</td><td>可以根据需求选择</td><td>最多</td><td>.nav {color: red}</td></tr><tr><td>id选择器</td><td>一次只能选择一个标签</td><td>id属性在每个html文档中只能出现一次</td><td>一般和js搭配</td><td>#nav {color: red}</td></tr><tr><td>通配符选择器</td><td>选择所有标签</td><td>选择过多，有部分不需要</td><td>特殊情况使用</td><td>* {color: red}</td></tr></tbody></table><p>每个基础选择器都有使用场景，都需要掌握</p><p>如果是修改样式，类选择器是使用最多的</p><h1 id="3复合选择器"><a href="#3复合选择器" class="headerlink" title="3复合选择器"></a>3复合选择器</h1><h2 id="3-1后代选择器"><a href="#3-1后代选择器" class="headerlink" title="3.1后代选择器"></a>3.1后代选择器</h2><p>后代选择器又称为包含选择器，可以选择父元素里面的子元素，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔，当标签发生嵌套时，内层标签就成为外层标签的后代。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123;属性:属性值;</span><br><span class="line">    属性:属性值;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> <span class="selector-tag">h3</span> &#123;<span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1里面的所有元素2（后代元素）</p><ul><li>元素1和元素2中间用空格隔开</li><li>元素1是父级，元素2是子级，最终选择的是元素2</li><li>元素2可以是儿子，也可以是孙子等，只要是元素1 的后代即可</li><li>元素1和元素2可以是任意基础选择器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/CSS4.png"></p><h2 id="3-2子选择器"><a href="#3-2子选择器" class="headerlink" title="3.2子选择器"></a>3.2子选择器</h2><p>子元素选择器（子选择器）只能选择作为某元素的最近一级子元素，简单理解就是选亲儿子元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span> &#123;样式声明</span><br><span class="line">    属性:属性值;</span><br><span class="line">    属性:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1里面的所有直接后代（子元素）元素2.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span> &#123;样式声明&#125;  <span class="comment">/*选择div里面所有最近一级p标签元素*/</span></span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用大于号隔开</li><li>元素1是父级，元素2是子级，最终选择的是元素2</li><li>元素2必须是亲儿子，其孙子，重孙之类都不归他管，你也可以叫他亲儿子选择器</li></ul><h2 id="3-3交集选择器"><a href="#3-3交集选择器" class="headerlink" title="3.3交集选择器"></a>3.3交集选择器</h2><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/CSS5.png"></p><p>其中第一个为标签选择器，第二个为class选择器，两个选择器之间<code>不能有空格</code>，如h3.special。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">交集选择器是并且的意思,即...又...的意思</span><br><span class="line">比如：   </span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span>    </span><br><span class="line"><span class="comment">/* 选择的是： 类名为 .one 的段落标签。</span></span><br><span class="line"><span class="comment">用的相对来说比较少，不建议使用。*/</span></span><br></pre></td></tr></table></figure><h2 id="3-4并集选择器"><a href="#3-4并集选择器" class="headerlink" title="3.4并集选择器"></a>3.4并集选择器</h2><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，通常用于整体声明。</p><p>并集选择器是个选择器通过英文逗号“,”连接而成，任何形式的选择器都可以作为并集选择器的一部分。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>,元素<span class="number">2</span> &#123;样式声明&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1和元素2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">div</span> &#123;样式声明&#125; <span class="comment">/*选择ul和div标签元素*/</span></span><br><span class="line">比如  </span><br><span class="line"><span class="selector-class">.one</span>, </span><br><span class="line"><span class="selector-tag">p</span> , </span><br><span class="line"><span class="selector-id">#test</span> &#123;<span class="attribute">color</span>: <span class="number">#F00</span>;&#125;  </span><br><span class="line"><span class="comment">/*表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。 </span></span><br><span class="line"><span class="comment">通常用于集体声明。 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用逗号隔开</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li></ul><h2 id="3-5链接伪类选择器"><a href="#3-5链接伪类选择器" class="headerlink" title="3.5链接伪类选择器"></a>3.5链接伪类选择器</h2><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第一个，第n个元素。</p><p>伪类选择器书写最大的特点是用冒号“:”表示，比如：hover,first-child.</p><p>因为伪类选择器很多，比如有链接伪类，结构伪类等，所以这里先给大家讲解常用的链接伪类选择器。</p><p>链接伪类，是利用交集选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>            <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>         <span class="comment">/*选择所有已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>           <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>          <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br></pre></td></tr></table></figure><p>用于向某些选择器添加特殊的效果。写的时候，他们的顺序尽量不要颠倒,按照lvha的顺序。否则可能引起错误。</p><p>链接伪类选择器注意事项</p><ol><li>为确保生效，请按照LVHA的顺序声明：link visited hover active</li><li>记忆法：love hate或者Lv包包hao</li><li>因为a链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</li></ol><p>实际工作中，很少写全四个状态，一般写法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;   <span class="comment">/* a是标签选择器  所有的链接 */</span></span><br><span class="line">   <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">   <span class="attribute">color</span>: gray;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none; <span class="comment">/* 清除链接默认的下划线*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;   <span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line">   <span class="attribute">color</span>: red; <span class="comment">/*  鼠标经过的时候，由原来的 灰色 变成了红色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6foucs伪类选择器"><a href="#3-6foucs伪类选择器" class="headerlink" title="3.6foucs伪类选择器"></a>3.6foucs伪类选择器</h2><p>foucs伪类选择器用于选取获得焦点的表单元素。</p><p>焦点就是光标，一般情况下类表单元素才能获取，因此这个选择器也主要针对表单元素来说。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>:foucs &#123;</span><br><span class="line">    background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7复合选择器总结"><a href="#3-7复合选择器总结" class="headerlink" title="3.7复合选择器总结"></a>3.7复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格.nav a</td></tr><tr><td>子选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是大于.nav&gt;a</td></tr><tr><td>交集选择器</td><td>选择两个标签交集部分</td><td>既是 又是</td><td>较少</td><td>没有符号 p.one</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号.nav,a</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住a{}和a:hover实际开发的写法</td></tr><tr><td>foucs伪类选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>input:focus记住这个写法</td></tr></tbody></table><h1 id="4团队约定"><a href="#4团队约定" class="headerlink" title="4团队约定"></a>4团队约定</h1><ol><li>尽量少用通配符选择器 <code>*</code>。</li><li>尽量少用ID选择器</li><li>不使用无具体语义定义的标签选择器。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">li</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line">*&#123;&#125;</span><br><span class="line"><span class="selector-id">#jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;&#125;   因为<span class="selector-tag">div</span> 没有语义，我们尽量少用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/%E5%89%8D%E7%AB%AF/CSS%E5%9F%BA%E7%A1%80/"/>
      <url>/%E5%89%8D%E7%AB%AF/CSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h1><h2 id="1-1HTML的局限性"><a href="#1-1HTML的局限性" class="headerlink" title="1.1HTML的局限性"></a>1.1HTML的局限性</h2><ul><li>HTML满足不了设计者的需求，可以将网页结构与样式相分离，这样就可以在不更改网页结构的前提下，更换网站的样式。</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><h2 id="1-2CSS网页美容师"><a href="#1-2CSS网页美容师" class="headerlink" title="1.2CSS网页美容师"></a>1.2CSS网页美容师</h2><p>CSS是<font color="red">层叠样式表</font>(Cascading Style Sheets)的简称,有时我们也会称之为CSS样式表或级联样式表，CSS是也是一种<font color="red">标记语言</font>。主要用于设置HTML页面中的<font color="red">文本内容</font>(字体、大小、对齐方式等)、<font color="red">图片外形</font>(宽高、边框样式、边距等）以及<font color="red">版面布局</font>和<font color="red">外观显示样式</font>。CSS让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：<strong>CSS可以美化HTML，让HTML更漂亮，让页面布局更简洁。</strong></p><p><strong>总结</strong>：</p><ul><li><p> HTML主要做结构，显示元素内容. </p></li><li><p> CSS美化HTML，布局网页.</p></li><li><p> CSS最大价值：由HTML专注去做结构呈现，样式交给   CSS，即结构(HTML)与样式(CSS)相分离</p></li></ul><h2 id="1-3CSS语法规范"><a href="#1-3CSS语法规范" class="headerlink" title="1.3CSS语法规范"></a>1.3CSS语法规范</h2><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。 CSS规则由两个主要的部分构成：<strong>选择器以及一条或多条声明</strong>。 </p><ol><li><p>选择器是用于指定CSS样式的<font color="red">HTML标签</font>，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“<font color="red">键值对</font>”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<font color="red"><strong>:</strong></font>”分开 </p></li><li><p>多个“键值对”之间用英文“<font color="red"><strong>;</strong></font>”进行区分</p></li></ol><h2 id="1-4CSS注释"><a href="#1-4CSS注释" class="headerlink" title="1.4CSS注释"></a>1.4CSS注释</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这是注释*/</span></span><br></pre></td></tr></table></figure><h1 id="2-CSS引入方式"><a href="#2-CSS引入方式" class="headerlink" title="2.CSS引入方式"></a>2.CSS引入方式</h1><p>css的三种样式表</p><p>按照CSS样式书写的位置（或者引入的方式），css样式表可以分为三大类：</p><ol><li>内部样式表（嵌入式）</li><li>行内样式表（行内式）</li><li>外部样式表（外链式）</li></ol><h2 id="2-1内部样式表"><a href="#2-1内部样式表" class="headerlink" title="2.1内部样式表"></a>2.1内部样式表</h2><p>内部样式表（内嵌样式表）是写到html页面内部，是将所有css代码抽取出来，单独放到一个style标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/CSS&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    选择器（选择的标签） &#123; </span></span><br><span class="line"><span class="css">      属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span></span><br><span class="line"><span class="css">      属性<span class="number">2</span>: 属性值<span class="number">2</span>; </span></span><br><span class="line"><span class="css">      属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">     <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     <span class="attribute">font-size</span>: <span class="number">12px</span>; </span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style标签理论上可以放在html文档的任何地方，但一般会放在文档的<head>标签中</li><li>通过此种方法，可以方便控制当前整个页面中元素样式设置</li><li>代码结构清晰，但并没有实现结构与样式完全分离</li><li>使用内部样式表设定CSS，通常被称为嵌入式引入，这种是练习常用的方法</li></ul><h2 id="2-2行内样式表"><a href="#2-2行内样式表" class="headerlink" title="2.2行内样式表"></a>2.2行内样式表</h2><p>行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style其实就是标签的属性</li><li>在双引号中间，写法要符合CSS规范</li><li>可以控制当前的标签设置样式</li><li>书写繁琐，没有体现结构与样式相分离的思想，不推荐大量使用</li><li>使用行内样式表设定CSS，通常被称为行内式引入</li></ul><h2 id="2-3外部样式表"><a href="#2-3外部样式表" class="headerlink" title="2.3外部样式表"></a>2.3外部样式表</h2><p>实际开发中使用的都是外部样式表，适合样式较多的情况，核心是样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为**.css**的样式文件，把所有CSS代码都放在此文件中</li><li>在HTML页面中，使用<link>标签引入这个文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p>在使用外部样式表设定CSS，通常也被称为外链式和链接式引入，这种方法是开发中常用的方法。</p><h2 id="2-4CSS引入方法总结"><a href="#2-4CSS引入方法总结" class="headerlink" title="2.4CSS引入方法总结"></a>2.4CSS引入方法总结</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>内部样式表</td><td>部分结构与样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混合</td><td>较少</td><td>控制一个标签</td></tr><tr><td>外部样式表</td><td>完全结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h1 id="3-CSS三大特性"><a href="#3-CSS三大特性" class="headerlink" title="3.CSS三大特性"></a>3.CSS三大特性</h1><p>CSS有三个非常重要的特性：<font color="red">层叠性</font>、<font color="red"><br>继承性</font>、<font color="red">优先级</font></p><h2 id="3-1层叠性"><a href="#3-1层叠性" class="headerlink" title="3.1层叠性"></a>3.1层叠性</h2><p>相同选择器给设置相同的样式，此时一个样式就会<font color="red">覆盖（层叠）</font>另一个冲突的样式。层叠性主要解决样式冲突的问题。</p><p><strong>层叠性原则：</strong></p><ul><li>样式冲突，遵循的是<font color="red">就近原则</font>，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css1.png" alt="层叠性"></p><h2 id="3-2继承性"><a href="#3-2继承性" class="headerlink" title="3.2继承性"></a>3.2继承性</h2><p>现实中的继承：我们继承了父亲的姓氏</p><p>CSS中的继承：子标签会继承父标签的某些样式，如文本颜色和字号</p><p>简单理解就是<font color="red">子承父业</font>。</p><ul><li>恰当的使用继承性可以简化代码，降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式（text- font- line-这些元素开头的可以继承，以及color属性）</li><li>继承性口诀：<strong>龙生龙，凤生凤，老鼠的孩子会打洞</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><h2 id="3-3优先级"><a href="#3-3优先级" class="headerlink" title="3.3优先级"></a>3.3优先级</h2><p>css特殊性</p><p><strong>概念：</strong>定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时如果：</p><ol><li>选择器相同，则执行层叠性</li><li>选择器不同，就会出现优先级的问题</li></ol><p>关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity（特殊性）。</p><p>选择器权重如下表所示</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0，0，0，0</td></tr><tr><td>元素选择器（每个元素）</td><td>0，0，0，1</td></tr><tr><td>类，伪类选择器（每个类，伪类）</td><td>0，0，1，0</td></tr><tr><td>id选择器（每个id）</td><td>0，1，0，0</td></tr><tr><td>行内样式style=””（每个行内样式）</td><td>1，0，0，0</td></tr><tr><td>每个!important 最重要的</td><td>无穷大</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">color</span>: pink <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure><p><strong>优先级注意点：</strong></p><ol><li>权重是由4组数字组成的，但是不会有进位</li><li>可以理解为<strong>类选择器永远大于元素选择器</strong>，<strong>id选择器永远大于类选择器</strong>，以此类推</li><li>等级判断从左到右，左面的最大，一级大于一级，如果某一位数值相同，则判断下一位数值</li><li>可以简单记忆：<strong>通配符和继承权重为0，标签选择器为1，类（伪类）选择器为10，id选择器100，行内样式表为1000，！important无穷大</strong></li><li>继承权重是0，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是0</li></ol><p><strong>权重叠加：</strong></p><p>如果是复合选择器，则会有权重叠加，需要计算权重。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">ul</span>  <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>      -----—&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span>       ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>我们修改样式，一定要看该标签有没有被选中</li><li>如果选中了，那么以上面的公式来计权重。谁大听谁的。</li><li>如果没有选中，那么权重是0，因为继承的权重为0.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css3.png" alt="优先级"></p><h1 id="4-代码风格"><a href="#4-代码风格" class="headerlink" title="4.代码风格"></a>4.代码风格</h1><p><strong>团队约定：</strong></p><ul><li>展开格式</li><li>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*1.紧凑格式 (Compact)不推荐*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*展开格式（推荐）*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">H3</span>&#123;</span><br><span class="line"> <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/%E5%89%8D%E7%AB%AF/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>/%E5%89%8D%E7%AB%AF/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>前端开发<br>前端开发<br>前端开发<br>前端开发<br>前端开发</p><p>前端开发<br>前端开发<br>前端开发</p><p>前端开发</p><p>前端开发</p><p>前端开发</p><p>前端开发</p><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。<br>CSS规则由两个主要的部分构成：选择器以及一条或多条声明。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><ol><li><p>选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“键值对”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<strong>：</strong>”分开 </p></li><li><p>多个“键值对”之间用英文“**;** “进行区分</p><h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1></li></ol><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>待写</p><h2 id="1-css简介"><a href="#1-css简介" class="headerlink" title="1.css简介"></a>1.css简介</h2><h3 id="1-1HTML的局限性"><a href="#1-1HTML的局限性" class="headerlink" title="1.1HTML的局限性"></a>1.1HTML的局限性</h3><ul><li>HTML满足不了设计者的需求，可以将网页结构与样式相分离，这样就可以在不更改网页结构的前提下，更换网站的样式。</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><h3 id="1-2CSS网页美容师"><a href="#1-2CSS网页美容师" class="headerlink" title="1.2CSS网页美容师"></a>1.2CSS网页美容师</h3><p>CSS是层叠样式表(Cascading Style Sheets)的简称,有时我们也会称之为CSS样式表或级联样式表，CSS是也是一种标记语言。主要用于设置HTML页面中的文本内容(字体、大小、对齐方式等)、图片的外形(宽高、边框样式、边距等）以及版面的布局和外观显示样式。CSS让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：CSS可以美化HTML，让HTML更漂亮，让页面布局更简洁。</p><p><strong>总结</strong>：</p><ul><li><p> HTML主要做结构，显示元素内容. </p></li><li><p> CSS美化HTML，布局网页.</p></li><li><p> CSS最大价值：由HTML专注去做结构呈现，样式交给   CSS，即结构(HTML)与样式(CSS)相分离</p></li></ul><h3 id="1-3CSS语法规范"><a href="#1-3CSS语法规范" class="headerlink" title="1.3CSS语法规范"></a>1.3CSS语法规范</h3><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。 CSS规则由两个主要的部分构成：选择器以及一条或多条声明。 </p><ol><li><p>选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“键值对”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<strong>：</strong>”分开 </p></li><li><p>多个“键值对”之间用英文“**;** “进行区分</p></li></ol><h3 id="1-4CSS注释"><a href="#1-4CSS注释" class="headerlink" title="1.4CSS注释"></a>1.4CSS注释</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这是注释*/</span></span><br></pre></td></tr></table></figure><h2 id="3-CSS三大特性"><a href="#3-CSS三大特性" class="headerlink" title="3.CSS三大特性"></a>3.CSS三大特性</h2><p>CSS有三个非常重要的特性：层叠性、继承性、优先级</p><h3 id="3-1层叠性"><a href="#3-1层叠性" class="headerlink" title="3.1层叠性"></a>3.1层叠性</h3><p>相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突的问题。</p><p><strong>层叠性原则：</strong></p><ul><li>样式冲突，遵循的是就近原则，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css1.png" alt="层叠性"></p><h3 id="3-2继承性"><a href="#3-2继承性" class="headerlink" title="3.2继承性"></a><strong>3.2继承性</strong></h3><p>现实中的继承：我们继承了父亲的姓氏</p><p>CSS中的继承：子标签会继承父标签的某些样式，如文本颜色和字号</p><p>简单理解就是子承父业。</p><ul><li>恰当的使用继承性可以简化代码，降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式（text- font- line-这些元素开头的可以继承，以及color属性）</li><li>继承性口诀：龙生龙，凤生凤，老鼠的孩子会打洞</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><h3 id="3-3优先级"><a href="#3-3优先级" class="headerlink" title="3.3优先级"></a>3.3优先级</h3><p>css特殊性</p><p><strong>概念：</strong>定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时如果：</p><ol><li>选择器相同，则执行层叠性</li><li>选择器不同，就会出现优先级的问题</li></ol><p>关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity（特殊性）。</p><p>选择器权重如下表所示</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0，0，0，0</td></tr><tr><td>元素选择器（每个元素）</td><td>0，0，0，1</td></tr><tr><td>类，伪类选择器（每个类，伪类）</td><td>0，0，1，0</td></tr><tr><td>id选择器（每个id）</td><td>0，1，0，0</td></tr><tr><td>行内样式style=””（每个行内样式）</td><td>1，0，0，0</td></tr><tr><td>每个!important 最重要的</td><td>无穷大</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">color</span>: pink <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure><p><strong>优先级注意点：</strong></p><ol><li>权重是由4组数字组成的，但是不会有进位</li><li>可以理解为类选择器永远大于元素选择器，id选择器永远大于类选择器，以此类推</li><li>等级判断从左到右，左面的最大，一级大于一级，如果某一位数值相同，则判断下一位数值</li><li>可以简单记忆：通配符和继承权重为0，标签选择器为1，类（伪类）选择器为10，id选择器100，行内样式表为1000，！important无穷大</li><li>继承权重是0，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是0</li></ol><p><strong>权重叠加：</strong></p><p>如果是复合选择器，则会有权重叠加，需要计算权重。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">ul</span>  <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>      -----—&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span>       ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>我们修改样式，一定要看该标签有没有被选中</li><li>如果选中了，那么以上面的公式来计权重。谁大听谁的。</li><li>如果没有选中，那么权重是0，因为继承的权重为0.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css3.png" alt="优先级"></p><h2 id="4-代码风格"><a href="#4-代码风格" class="headerlink" title="4.代码风格"></a>4.代码风格</h2><p><strong>团队约定：</strong></p><ul><li>展开格式</li><li>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*1.紧凑格式 (Compact)不推荐*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*展开格式（推荐）*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">H3</span>&#123;</span><br><span class="line"> <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2行内样式表"><a href="#2-2行内样式表" class="headerlink" title="2.2行内样式表"></a>2.2行内样式表</h3><p>行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style其实就是标签的属性</li><li>在双引号中间，写法要符合CSS规范</li><li>可以控制当前的标签设置样式</li><li>书写繁琐，没有体现结构与样式相分离的思想，不推荐大量使用</li><li>使用行内样式表设定CSS，通常被称为行内式引入</li></ul><h3 id="2-3外部样式表"><a href="#2-3外部样式表" class="headerlink" title="2.3外部样式表"></a>2.3外部样式表</h3><p>实际开发中使用的都是外部样式表，适合样式较多的情况，核心是样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为**.css**的样式文件，把所有CSS代码都放在此文件中</li><li>在HTML页面中，使用link标签引入这个文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p>在使用外部样式表设定CSS，通常也被称为外链式和链接式引入，这种方法是开发中常用的方法。</p><h3 id="2-4CSS引入方法总结"><a href="#2-4CSS引入方法总结" class="headerlink" title="2.4CSS引入方法总结"></a>2.4CSS引入方法总结</h3><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>内部样式表</td><td>部分结构与样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混合</td><td>较少</td><td>控制一个标签</td></tr><tr><td>外部样式表</td><td>完全结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/%E6%B5%8B%E8%AF%95/"/>
      <url>/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>##二级标题<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发</p><p>###三级标题<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发</p><p>##实例演示<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub</p><p>###三级标题1<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;hello world!\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>随记</title>
      <link href="/%E9%9A%8F%E8%AE%B0/"/>
      <url>/%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱</strong></p><p>风已经吹过我们的一页了，也该释怀了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
