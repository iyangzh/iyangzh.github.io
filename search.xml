<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS选择器</title>
      <link href="/2022/04/03/%E5%89%8D%E7%AB%AF/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2022/04/03/%E5%89%8D%E7%AB%AF/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1CSS选择器简介"><a href="#1CSS选择器简介" class="headerlink" title="1CSS选择器简介"></a>1CSS选择器简介</h1><h2 id="1-1CSS选择器的作用"><a href="#1-1CSS选择器的作用" class="headerlink" title="1.1CSS选择器的作用"></a>1.1CSS选择器的作用</h2><p>选择器（选择符）就是根据不同需求把不同的标签选出来，这就是选择器的作用。简单来说，就是选择标签用的。 CSS做了两件事： </p><ol><li>找到标签（选对人）</li><li>设置这些标签的样式（做对事）</li></ol><h2 id="1-2选择器分类"><a href="#1-2选择器分类" class="headerlink" title="1.2选择器分类"></a>1.2选择器分类</h2><p>在CSS中，可以根据选择器类型把选择器分为基础选择器和复合选择器。</p><ul><li>基础选择器是由单个选择器组成的 </li><li>基础选择器又包括：<strong>标签选择器、类选择器、id选择器和通配符选择器</strong></li></ul><p>复合选择器是建立在基础选择器之上，对基础选择器进行组合形成的。</p><ul><li>复合选择器可以更精准，更高效的选择目标元素（标签）</li><li>复合选择器是有两个或多个基础选择器，通过不同的方式组合而成的</li><li>常用的复合选择器包括：<strong>后代选择器，子选择器，并集选择器，伪类选择器等</strong></li></ul><h1 id="2基础选择器"><a href="#2基础选择器" class="headerlink" title="2基础选择器"></a>2基础选择器</h1><h2 id="2-1标签选择器"><a href="#2-1标签选择器" class="headerlink" title="2.1标签选择器"></a>2.1标签选择器</h2><p>标签选择器（元素选择器）是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。 </p><p>作用: 标签选择器可以把某一类标签全部选择出来，比如所有的div标签和所有的span标签。 </p><p>优点: 能快速为页面中同类型的标签统一设置样式。 </p><p>缺点: 不能设计差异化样式，只能选择全部的当前标签。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>;</span><br><span class="line">        属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">        属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">      &#125; </span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h2 id="2-2类选择器"><a href="#2-2类选择器" class="headerlink" title="2.2类选择器"></a>2.2类选择器</h2><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。</p><p>类选择器在HTML中以class属性表示，在CSS中，类选择器以一个点“ <strong>.</strong> ”号显示。 </p><p><strong>注意</strong> ①类选择器使用“ . ”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。 </p><p>②可以理解为给这个标签起了一个名字，来表示。 </p><p>③长名称或词组可以使用中横线来为选择器命名。 </p><p>④不要使用纯数字、中文等命名，尽量使用英文字母来表示。 </p><p>⑤命名要有意义，尽量使别人一眼就知道这个类名的目的。 </p><p>⑥命名规范：见附件(Web前端开发规范手册. doc)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.类名<span class="number">1</span>  &#123;   </span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>; </span><br><span class="line">    属性<span class="number">2</span>: 属性值<span class="number">2</span>; </span><br><span class="line">    属性<span class="number">3</span>: 属性值<span class="number">3</span>;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;类名1 类名2&quot;</span>&gt;</span> 样例 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>各个类名中间用空格隔开</li><li>简单理解：就是给某个标签添加了多个类，或者这个标签有多个名字</li><li>这个标签就可以分别具有这些类名的样式</li><li>从而节省css代码，统一修改也非常方便</li><li>多个类名选择器在后期布局比较复杂的情况下，还是较多使用的</li></ul><h2 id="2-3id选择器"><a href="#2-3id选择器" class="headerlink" title="2.3id选择器"></a>2.3id选择器</h2><p>id选择器可以为标有特定id的HTML元素指定特定的样式。</p><p>HTML元素以id属性来设置id选择器，CSS中id选择器以“ <strong>#</strong> ”来定义。</p><p><strong>注意</strong>：id属性只能在每个HTML文档中出现一次</p><p><strong>口诀</strong>：样式#定义，结构id调用，只能调用一次，别人切勿使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>; </span><br><span class="line">        属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">        属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;id名&quot;</span>&gt;</span>样例<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>id选择器和类选择器的区别</strong> </p><p>①类选择器(class)好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。 </p><p>②id选择器好比人的身份证号码β、全中国是唯一的,不得重复。 </p><p>③id选择器和类选择器最大的不同在于使用次数上。 </p><p>④类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</p><h2 id="2-4通配符选择器"><a href="#2-4通配符选择器" class="headerlink" title="2.4通配符选择器"></a>2.4通配符选择器</h2><p>在CSS中，通配符选择器使用“ ***** ”定义，它表示选取页面中所有元素(标签)。</p><ul><li>通配符选择器不需要调用，自动就给所有的元素使用样式</li><li>特殊情况才使用，后面讲解使用</li></ul><p><strong>注意：</strong>会匹配页面所有的元素，降低页面响应速度，不建议随便使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>; </span><br><span class="line">    属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">    属性<span class="number">3</span>:属性值<span class="number">3</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如下面代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;                    <span class="comment">/* 定义外边距*/</span></span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0</span>;                   <span class="comment">/* 定义内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5基础选择器总结"><a href="#2-5基础选择器总结" class="headerlink" title="2.5基础选择器总结"></a>2.5基础选择器总结</h2><table><thead><tr><th>标签选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td><td>p {color: red}</td></tr><tr><td>类选择器</td><td>可以选出一个或多个标签</td><td>可以根据需求选择</td><td>最多</td><td>.nav {color: red}</td></tr><tr><td>id选择器</td><td>一次只能选择一个标签</td><td>id属性在每个html文档中只能出现一次</td><td>一般和js搭配</td><td>#nav {color: red}</td></tr><tr><td>通配符选择器</td><td>选择所有标签</td><td>选择过多，有部分不需要</td><td>特殊情况使用</td><td>* {color: red}</td></tr></tbody></table><p>每个基础选择器都有使用场景，都需要掌握</p><p>如果是修改样式，类选择器是使用最多的</p><h1 id="3复合选择器"><a href="#3复合选择器" class="headerlink" title="3复合选择器"></a>3复合选择器</h1><h2 id="3-1后代选择器"><a href="#3-1后代选择器" class="headerlink" title="3.1后代选择器"></a>3.1后代选择器</h2><p>后代选择器又称为包含选择器，可以选择父元素里面的子元素，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔，当标签发生嵌套时，内层标签就成为外层标签的后代。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123;属性:属性值;</span><br><span class="line">    属性:属性值;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> <span class="selector-tag">h3</span> &#123;<span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1里面的所有元素2（后代元素）</p><ul><li>元素1和元素2中间用空格隔开</li><li>元素1是父级，元素2是子级，最终选择的是元素2</li><li>元素2可以是儿子，也可以是孙子等，只要是元素1 的后代即可</li><li>元素1和元素2可以是任意基础选择器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/CSS4.png"></p><h2 id="3-2子选择器"><a href="#3-2子选择器" class="headerlink" title="3.2子选择器"></a>3.2子选择器</h2><p>子元素选择器（子选择器）只能选择作为某元素的最近一级子元素，简单理解就是选亲儿子元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span> &#123;样式声明</span><br><span class="line">    属性:属性值;</span><br><span class="line">    属性:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1里面的所有直接后代（子元素）元素2.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span> &#123;样式声明&#125;  <span class="comment">/*选择div里面所有最近一级p标签元素*/</span></span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用大于号隔开</li><li>元素1是父级，元素2是子级，最终选择的是元素2</li><li>元素2必须是亲儿子，其孙子，重孙之类都不归他管，你也可以叫他亲儿子选择器</li></ul><h2 id="3-3交集选择器"><a href="#3-3交集选择器" class="headerlink" title="3.3交集选择器"></a>3.3交集选择器</h2><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/CSS5.png"></p><p>其中第一个为标签选择器，第二个为class选择器，两个选择器之间<code>不能有空格</code>，如h3.special。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">交集选择器是并且的意思,即...又...的意思</span><br><span class="line">比如：   </span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span>    </span><br><span class="line"><span class="comment">/* 选择的是： 类名为 .one 的段落标签。</span></span><br><span class="line"><span class="comment">用的相对来说比较少，不建议使用。*/</span></span><br></pre></td></tr></table></figure><h2 id="3-4并集选择器"><a href="#3-4并集选择器" class="headerlink" title="3.4并集选择器"></a>3.4并集选择器</h2><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，通常用于整体声明。</p><p>并集选择器是个选择器通过英文逗号“,”连接而成，任何形式的选择器都可以作为并集选择器的一部分。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>,元素<span class="number">2</span> &#123;样式声明&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1和元素2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">div</span> &#123;样式声明&#125; <span class="comment">/*选择ul和div标签元素*/</span></span><br><span class="line">比如  </span><br><span class="line"><span class="selector-class">.one</span>, </span><br><span class="line"><span class="selector-tag">p</span> , </span><br><span class="line"><span class="selector-id">#test</span> &#123;<span class="attribute">color</span>: <span class="number">#F00</span>;&#125;  </span><br><span class="line"><span class="comment">/*表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。 </span></span><br><span class="line"><span class="comment">通常用于集体声明。 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用逗号隔开</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li></ul><h2 id="3-5链接伪类选择器"><a href="#3-5链接伪类选择器" class="headerlink" title="3.5链接伪类选择器"></a>3.5链接伪类选择器</h2><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第一个，第n个元素。</p><p>伪类选择器书写最大的特点是用冒号“:”表示，比如：hover,first-child.</p><p>因为伪类选择器很多，比如有链接伪类，结构伪类等，所以这里先给大家讲解常用的链接伪类选择器。</p><p>链接伪类，是利用交集选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>            <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>         <span class="comment">/*选择所有已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>           <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>          <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br></pre></td></tr></table></figure><p>用于向某些选择器添加特殊的效果。写的时候，他们的顺序尽量不要颠倒,按照lvha的顺序。否则可能引起错误。</p><p>链接伪类选择器注意事项</p><ol><li>为确保生效，请按照LVHA的顺序声明：link visited hover active</li><li>记忆法：love hate或者Lv包包hao</li><li>因为a链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</li></ol><p>实际工作中，很少写全四个状态，一般写法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;   <span class="comment">/* a是标签选择器  所有的链接 */</span></span><br><span class="line">   <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">   <span class="attribute">color</span>: gray;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none; <span class="comment">/* 清除链接默认的下划线*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;   <span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line">   <span class="attribute">color</span>: red; <span class="comment">/*  鼠标经过的时候，由原来的 灰色 变成了红色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6foucs伪类选择器"><a href="#3-6foucs伪类选择器" class="headerlink" title="3.6foucs伪类选择器"></a>3.6foucs伪类选择器</h2><p>foucs伪类选择器用于选取获得焦点的表单元素。</p><p>焦点就是光标，一般情况下类表单元素才能获取，因此这个选择器也主要针对表单元素来说。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>:foucs &#123;</span><br><span class="line">    background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7复合选择器总结"><a href="#3-7复合选择器总结" class="headerlink" title="3.7复合选择器总结"></a>3.7复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格.nav a</td></tr><tr><td>子选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是大于.nav&gt;a</td></tr><tr><td>交集选择器</td><td>选择两个标签交集部分</td><td>既是 又是</td><td>较少</td><td>没有符号 p.one</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号.nav,a</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住a{}和a:hover实际开发的写法</td></tr><tr><td>foucs伪类选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>input:focus记住这个写法</td></tr></tbody></table><h1 id="4团队约定"><a href="#4团队约定" class="headerlink" title="4团队约定"></a>4团队约定</h1><ol><li>尽量少用通配符选择器 <code>*</code>。</li><li>尽量少用ID选择器</li><li>不使用无具体语义定义的标签选择器。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">li</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line">*&#123;&#125;</span><br><span class="line"><span class="selector-id">#jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;&#125;   因为<span class="selector-tag">div</span> 没有语义，我们尽量少用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/2022/03/20/%E5%89%8D%E7%AB%AF/CSS%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/03/20/%E5%89%8D%E7%AB%AF/CSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h1><h2 id="1-1HTML的局限性"><a href="#1-1HTML的局限性" class="headerlink" title="1.1HTML的局限性"></a>1.1HTML的局限性</h2><ul><li>HTML满足不了设计者的需求，可以将网页结构与样式相分离，这样就可以在不更改网页结构的前提下，更换网站的样式。</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><h2 id="1-2CSS网页美容师"><a href="#1-2CSS网页美容师" class="headerlink" title="1.2CSS网页美容师"></a>1.2CSS网页美容师</h2><p>CSS是<font color="red">层叠样式表</font>(Cascading Style Sheets)的简称,有时我们也会称之为CSS样式表或级联样式表，CSS是也是一种<font color="red">标记语言</font>。主要用于设置HTML页面中的<font color="red">文本内容</font>(字体、大小、对齐方式等)、<font color="red">图片外形</font>(宽高、边框样式、边距等）以及<font color="red">版面布局</font>和<font color="red">外观显示样式</font>。CSS让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：<strong>CSS可以美化HTML，让HTML更漂亮，让页面布局更简洁。</strong></p><p><strong>总结</strong>：</p><ul><li><p> HTML主要做结构，显示元素内容. </p></li><li><p> CSS美化HTML，布局网页.</p></li><li><p> CSS最大价值：由HTML专注去做结构呈现，样式交给   CSS，即结构(HTML)与样式(CSS)相分离</p></li></ul><h2 id="1-3CSS语法规范"><a href="#1-3CSS语法规范" class="headerlink" title="1.3CSS语法规范"></a>1.3CSS语法规范</h2><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。 CSS规则由两个主要的部分构成：<strong>选择器以及一条或多条声明</strong>。 </p><ol><li><p>选择器是用于指定CSS样式的<font color="red">HTML标签</font>，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“<font color="red">键值对</font>”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<font color="red"><strong>:</strong></font>”分开 </p></li><li><p>多个“键值对”之间用英文“<font color="red"><strong>;</strong></font>”进行区分</p></li></ol><h2 id="1-4CSS注释"><a href="#1-4CSS注释" class="headerlink" title="1.4CSS注释"></a>1.4CSS注释</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这是注释*/</span></span><br></pre></td></tr></table></figure><h1 id="2-CSS引入方式"><a href="#2-CSS引入方式" class="headerlink" title="2.CSS引入方式"></a>2.CSS引入方式</h1><p>css的三种样式表</p><p>按照CSS样式书写的位置（或者引入的方式），css样式表可以分为三大类：</p><ol><li>内部样式表（嵌入式）</li><li>行内样式表（行内式）</li><li>外部样式表（外链式）</li></ol><h2 id="2-1内部样式表"><a href="#2-1内部样式表" class="headerlink" title="2.1内部样式表"></a>2.1内部样式表</h2><p>内部样式表（内嵌样式表）是写到html页面内部，是将所有css代码抽取出来，单独放到一个style标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/CSS&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    选择器（选择的标签） &#123; </span></span><br><span class="line"><span class="css">      属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span></span><br><span class="line"><span class="css">      属性<span class="number">2</span>: 属性值<span class="number">2</span>; </span></span><br><span class="line"><span class="css">      属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">     <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     <span class="attribute">font-size</span>: <span class="number">12px</span>; </span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style标签理论上可以放在html文档的任何地方，但一般会放在文档的<head>标签中</li><li>通过此种方法，可以方便控制当前整个页面中元素样式设置</li><li>代码结构清晰，但并没有实现结构与样式完全分离</li><li>使用内部样式表设定CSS，通常被称为嵌入式引入，这种是练习常用的方法</li></ul><h2 id="2-2行内样式表"><a href="#2-2行内样式表" class="headerlink" title="2.2行内样式表"></a>2.2行内样式表</h2><p>行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style其实就是标签的属性</li><li>在双引号中间，写法要符合CSS规范</li><li>可以控制当前的标签设置样式</li><li>书写繁琐，没有体现结构与样式相分离的思想，不推荐大量使用</li><li>使用行内样式表设定CSS，通常被称为行内式引入</li></ul><h2 id="2-3外部样式表"><a href="#2-3外部样式表" class="headerlink" title="2.3外部样式表"></a>2.3外部样式表</h2><p>实际开发中使用的都是外部样式表，适合样式较多的情况，核心是样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为**.css**的样式文件，把所有CSS代码都放在此文件中</li><li>在HTML页面中，使用<link>标签引入这个文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p>在使用外部样式表设定CSS，通常也被称为外链式和链接式引入，这种方法是开发中常用的方法。</p><h2 id="2-4CSS引入方法总结"><a href="#2-4CSS引入方法总结" class="headerlink" title="2.4CSS引入方法总结"></a>2.4CSS引入方法总结</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>内部样式表</td><td>部分结构与样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混合</td><td>较少</td><td>控制一个标签</td></tr><tr><td>外部样式表</td><td>完全结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h1 id="3-CSS三大特性"><a href="#3-CSS三大特性" class="headerlink" title="3.CSS三大特性"></a>3.CSS三大特性</h1><p>CSS有三个非常重要的特性：<font color="red">层叠性</font>、<font color="red"><br>继承性</font>、<font color="red">优先级</font></p><h2 id="3-1层叠性"><a href="#3-1层叠性" class="headerlink" title="3.1层叠性"></a>3.1层叠性</h2><p>相同选择器给设置相同的样式，此时一个样式就会<font color="red">覆盖（层叠）</font>另一个冲突的样式。层叠性主要解决样式冲突的问题。</p><p><strong>层叠性原则：</strong></p><ul><li>样式冲突，遵循的是<font color="red">就近原则</font>，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css1.png" alt="层叠性"></p><h2 id="3-2继承性"><a href="#3-2继承性" class="headerlink" title="3.2继承性"></a>3.2继承性</h2><p>现实中的继承：我们继承了父亲的姓氏</p><p>CSS中的继承：子标签会继承父标签的某些样式，如文本颜色和字号</p><p>简单理解就是<font color="red">子承父业</font>。</p><ul><li>恰当的使用继承性可以简化代码，降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式（text- font- line-这些元素开头的可以继承，以及color属性）</li><li>继承性口诀：<strong>龙生龙，凤生凤，老鼠的孩子会打洞</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><h2 id="3-3优先级"><a href="#3-3优先级" class="headerlink" title="3.3优先级"></a>3.3优先级</h2><p>css特殊性</p><p><strong>概念：</strong>定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时如果：</p><ol><li>选择器相同，则执行层叠性</li><li>选择器不同，就会出现优先级的问题</li></ol><p>关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity（特殊性）。</p><p>选择器权重如下表所示</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0，0，0，0</td></tr><tr><td>元素选择器（每个元素）</td><td>0，0，0，1</td></tr><tr><td>类，伪类选择器（每个类，伪类）</td><td>0，0，1，0</td></tr><tr><td>id选择器（每个id）</td><td>0，1，0，0</td></tr><tr><td>行内样式style=””（每个行内样式）</td><td>1，0，0，0</td></tr><tr><td>每个!important 最重要的</td><td>无穷大</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">color</span>: pink <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure><p><strong>优先级注意点：</strong></p><ol><li>权重是由4组数字组成的，但是不会有进位</li><li>可以理解为<strong>类选择器永远大于元素选择器</strong>，<strong>id选择器永远大于类选择器</strong>，以此类推</li><li>等级判断从左到右，左面的最大，一级大于一级，如果某一位数值相同，则判断下一位数值</li><li>可以简单记忆：<strong>通配符和继承权重为0，标签选择器为1，类（伪类）选择器为10，id选择器100，行内样式表为1000，！important无穷大</strong></li><li>继承权重是0，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是0</li></ol><p><strong>权重叠加：</strong></p><p>如果是复合选择器，则会有权重叠加，需要计算权重。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">ul</span>  <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>      -----—&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span>       ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>我们修改样式，一定要看该标签有没有被选中</li><li>如果选中了，那么以上面的公式来计权重。谁大听谁的。</li><li>如果没有选中，那么权重是0，因为继承的权重为0.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css3.png" alt="优先级"></p><h1 id="4-代码风格"><a href="#4-代码风格" class="headerlink" title="4.代码风格"></a>4.代码风格</h1><p><strong>团队约定：</strong></p><ul><li>展开格式</li><li>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*1.紧凑格式 (Compact)不推荐*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*展开格式（推荐）*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">H3</span>&#123;</span><br><span class="line"> <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/2022/01/14/%E5%89%8D%E7%AB%AF/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/01/14/%E5%89%8D%E7%AB%AF/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>前端开发<br>前端开发<br>前端开发<br>前端开发<br>前端开发</p><p>前端开发<br>前端开发<br>前端开发</p><p>前端开发</p><p>前端开发</p><p>前端开发</p><p>前端开发</p><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。<br>CSS规则由两个主要的部分构成：选择器以及一条或多条声明。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><ol><li><p>选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“键值对”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<strong>：</strong>”分开 </p></li><li><p>多个“键值对”之间用英文“**;** “进行区分</p><h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1></li></ol><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>待写</p><h2 id="1-css简介"><a href="#1-css简介" class="headerlink" title="1.css简介"></a>1.css简介</h2><h3 id="1-1HTML的局限性"><a href="#1-1HTML的局限性" class="headerlink" title="1.1HTML的局限性"></a>1.1HTML的局限性</h3><ul><li>HTML满足不了设计者的需求，可以将网页结构与样式相分离，这样就可以在不更改网页结构的前提下，更换网站的样式。</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><h3 id="1-2CSS网页美容师"><a href="#1-2CSS网页美容师" class="headerlink" title="1.2CSS网页美容师"></a>1.2CSS网页美容师</h3><p>CSS是层叠样式表(Cascading Style Sheets)的简称,有时我们也会称之为CSS样式表或级联样式表，CSS是也是一种标记语言。主要用于设置HTML页面中的文本内容(字体、大小、对齐方式等)、图片的外形(宽高、边框样式、边距等）以及版面的布局和外观显示样式。CSS让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：CSS可以美化HTML，让HTML更漂亮，让页面布局更简洁。</p><p><strong>总结</strong>：</p><ul><li><p> HTML主要做结构，显示元素内容. </p></li><li><p> CSS美化HTML，布局网页.</p></li><li><p> CSS最大价值：由HTML专注去做结构呈现，样式交给   CSS，即结构(HTML)与样式(CSS)相分离</p></li></ul><h3 id="1-3CSS语法规范"><a href="#1-3CSS语法规范" class="headerlink" title="1.3CSS语法规范"></a>1.3CSS语法规范</h3><p>使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。 CSS规则由两个主要的部分构成：选择器以及一条或多条声明。 </p><ol><li><p>选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 </p></li><li><p>属性和属性值以“键值对”的形式出现 </p></li><li><p>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 </p></li><li><p>属性和属性值之间用英文“<strong>：</strong>”分开 </p></li><li><p>多个“键值对”之间用英文“**;** “进行区分</p></li></ol><h3 id="1-4CSS注释"><a href="#1-4CSS注释" class="headerlink" title="1.4CSS注释"></a>1.4CSS注释</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这是注释*/</span></span><br></pre></td></tr></table></figure><h2 id="3-CSS三大特性"><a href="#3-CSS三大特性" class="headerlink" title="3.CSS三大特性"></a>3.CSS三大特性</h2><p>CSS有三个非常重要的特性：层叠性、继承性、优先级</p><h3 id="3-1层叠性"><a href="#3-1层叠性" class="headerlink" title="3.1层叠性"></a>3.1层叠性</h3><p>相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突的问题。</p><p><strong>层叠性原则：</strong></p><ul><li>样式冲突，遵循的是就近原则，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css1.png" alt="层叠性"></p><h3 id="3-2继承性"><a href="#3-2继承性" class="headerlink" title="3.2继承性"></a><strong>3.2继承性</strong></h3><p>现实中的继承：我们继承了父亲的姓氏</p><p>CSS中的继承：子标签会继承父标签的某些样式，如文本颜色和字号</p><p>简单理解就是子承父业。</p><ul><li>恰当的使用继承性可以简化代码，降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式（text- font- line-这些元素开头的可以继承，以及color属性）</li><li>继承性口诀：龙生龙，凤生凤，老鼠的孩子会打洞</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css2.png" alt="继承性"></p><h3 id="3-3优先级"><a href="#3-3优先级" class="headerlink" title="3.3优先级"></a>3.3优先级</h3><p>css特殊性</p><p><strong>概念：</strong>定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时如果：</p><ol><li>选择器相同，则执行层叠性</li><li>选择器不同，就会出现优先级的问题</li></ol><p>关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity（特殊性）。</p><p>选择器权重如下表所示</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0，0，0，0</td></tr><tr><td>元素选择器（每个元素）</td><td>0，0，0，1</td></tr><tr><td>类，伪类选择器（每个类，伪类）</td><td>0，0，1，0</td></tr><tr><td>id选择器（每个id）</td><td>0，1，0，0</td></tr><tr><td>行内样式style=””（每个行内样式）</td><td>1，0，0，0</td></tr><tr><td>每个!important 最重要的</td><td>无穷大</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">color</span>: pink <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure><p><strong>优先级注意点：</strong></p><ol><li>权重是由4组数字组成的，但是不会有进位</li><li>可以理解为类选择器永远大于元素选择器，id选择器永远大于类选择器，以此类推</li><li>等级判断从左到右，左面的最大，一级大于一级，如果某一位数值相同，则判断下一位数值</li><li>可以简单记忆：通配符和继承权重为0，标签选择器为1，类（伪类）选择器为10，id选择器100，行内样式表为1000，！important无穷大</li><li>继承权重是0，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是0</li></ol><p><strong>权重叠加：</strong></p><p>如果是复合选择器，则会有权重叠加，需要计算权重。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">ul</span>  <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>   ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>      -----—&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span>       ------&gt;      <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>我们修改样式，一定要看该标签有没有被选中</li><li>如果选中了，那么以上面的公式来计权重。谁大听谁的。</li><li>如果没有选中，那么权重是0，因为继承的权重为0.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lonely2022/picture/img/css3.png" alt="优先级"></p><h2 id="4-代码风格"><a href="#4-代码风格" class="headerlink" title="4.代码风格"></a>4.代码风格</h2><p><strong>团队约定：</strong></p><ul><li>展开格式</li><li>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*1.紧凑格式 (Compact)不推荐*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*展开格式（推荐）*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">H3</span>&#123;</span><br><span class="line"> <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2行内样式表"><a href="#2-2行内样式表" class="headerlink" title="2.2行内样式表"></a>2.2行内样式表</h3><p>行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; </span><br><span class="line">    内容 </span><br><span class="line">&lt;/标签名&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    示例</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style其实就是标签的属性</li><li>在双引号中间，写法要符合CSS规范</li><li>可以控制当前的标签设置样式</li><li>书写繁琐，没有体现结构与样式相分离的思想，不推荐大量使用</li><li>使用行内样式表设定CSS，通常被称为行内式引入</li></ul><h3 id="2-3外部样式表"><a href="#2-3外部样式表" class="headerlink" title="2.3外部样式表"></a>2.3外部样式表</h3><p>实际开发中使用的都是外部样式表，适合样式较多的情况，核心是样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为**.css**的样式文件，把所有CSS代码都放在此文件中</li><li>在HTML页面中，使用link标签引入这个文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p>在使用外部样式表设定CSS，通常也被称为外链式和链接式引入，这种方法是开发中常用的方法。</p><h3 id="2-4CSS引入方法总结"><a href="#2-4CSS引入方法总结" class="headerlink" title="2.4CSS引入方法总结"></a>2.4CSS引入方法总结</h3><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>内部样式表</td><td>部分结构与样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混合</td><td>较少</td><td>控制一个标签</td></tr><tr><td>外部样式表</td><td>完全结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小白的前端之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2022/01/10/%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/01/10/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>##二级标题<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发</p><p>###三级标题<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发<br>web前端开发web前端开发web前端开发</p><p>##实例演示<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub</p><p>###三级标题1<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub<br>wivbiurgeuiwvevbuiewveiuwiwvnioewub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;hello world!\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>随记</title>
      <link href="/2022/01/10/%E9%9A%8F%E8%AE%B0/"/>
      <url>/2022/01/10/%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱</strong><br>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱一个满眼是你的人才配得上你全部的爱</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱<br>一个满眼是你的人才配得上你全部的爱</p><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>是你的人才配得上你<br>是你的人才配得上你<br>是你的人才配得上你<br>是你的人才配得上你<br>是你的人才配得上你</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/06/hello-world/"/>
      <url>/2022/01/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
